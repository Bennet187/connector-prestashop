name: CI

on:
  push:
    branches:
    - feature/github-actions
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: PHP- und Composer-Setup
        uses: shivammathur/setup-php@v1
        with: 
          php-version: '7.2'
          ini-values: phar.readonly=Off
      - run: |
            sudo apt-get update
            sudo apt-get install apache2
            sudo add-apt-repository -y ppa:ondrej/php
            sudo apt-get install php7.2-intl
      - uses: docker://composer:latest
        
      - name: Repo auschecken
        uses: actions/checkout@v2
        with:
          repository: 'Bennet187/connector-prestashop'
          ref: 'feature/github-actions'
          clean: 'false'
          
      - name: Prestashop-Installation Test
        run: |
            cd /var/www/html
            sudo wget -nv https://codeload.github.com/PrestaShop/PrestaShop/zip/1.7.6.3
            sudo unzip -qq 1.7.6.3
            mysql -u root -proot -e 'CREATE DATABASE prestashop'
            sudo mv /var/www/html/PrestaShop-1.7.6.3/* /var/www/html/
            cd /var/www/html/PrestaShop-1.7.6.3
            ls -l
            cd /var/www/html
            sudo chmod -R 777 /var/www/
            composer install
            cd /var/www/html/install-dev
            sudo php index_cli.php --domain=localhost --db_server=localhost --db_name=prestashop --db_user=root --db_password=root

      - name: Buildprozess
        run: |
            cd $GITHUB_WORKSPACE
            ./build.sh
            mkdir zip
            mv *.zip $GITHUB_WORKSPACE/zip
            
      - name: Connector installieren
        run: |
            cd /var/www/html
            ls -l
            sudo mkdir --parents /var/www/html/modules/jtlconnector
            sudo mv $GITHUB_WORKSPACE/* $_       
            cd /var/www/html/modules/jtlconnector
            composer update
            cd /var/www/html/
            sudo mkdir log app/logs
            sudo php bin/console prestashop:module install jtlconnector
            
      - if: success()
        name: FTP Upload
        uses: SamKirkland/FTP-Deploy-Action@2.0.0
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USER }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          ARGS: --verbose 
          REMOTE_DIR: build
          LOCAL_DIR: zip
